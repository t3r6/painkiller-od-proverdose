o.Mesh = [[polySurfaceShape5]]
o.Pack = [[ammo_arrows.dat]]
o.takeDistance = 1.8
o.Scale = 0.07
o.DisabledInVoosh = true
o.AmmoAdd = 18
o.MPAmmoAdd = 9
o.RespawnTime = 15
o.s_SubClass ={}

--============================================================================
function o:OnInitTemplate()
    self.CubeMap = nil
    self.DetailMap = nil
    self.NormalMap = nil
    self.Destroy = nil
    self.Impulse = nil
    self:ReplaceFunction("_Synchronize","Synchronize")
    self:ReplaceFunction("Synchronize","nil")
end
--============================================================================
function AmmoArrows:OnCreateEntity()
    ENTITY.EnableNetworkSynchronization(self._Entity)
-- self:BindFX("Ectoplasmer_UglyGreen",1)
end
--============================================================================
function AmmoArrows:OnTake(player)
    if player.Ammo.Arrows >= CPlayer.s_SubClass.MaxAmmo.Arrows then return true end
local add
if Game.GMode == GModes.SingleGame then add=self.AmmoAdd else add = self.MPAmmoAdd end
    self.TakeFX(player._Entity, add)
	Game.PlayerAmmoFound =  Game.PlayerAmmoFound + 1
end
--============================================================================
function AmmoArrows:TakeFX(pe,add)
    local player = EntityToObject[pe]
    
    if player then
	if Game.GMode == GModes.SingleGame then
	        player.Ammo.Arrows = player.Ammo.Arrows + add * AmmoDifficultyModifier[Game.Difficulty] * Game.AmmoFoundFactor
	else
        	player.Ammo.Arrows = player.Ammo.Arrows + add
	end
        player:CheckMaxAmmo()
        if player == Player then player:PickupFX() end
    end

    Templates["AmmoArrows.CItem"]:SndEnt("pickup",pe)
end
Network:RegisterMethod("AmmoArrows.TakeFX", NCallOn.ServerAndAllClients, NMode.Reliable, "eu")
--============================================================================
