o.Mesh = [[polySurfaceShape26]]
o.Pack = [[ammo_stickybombs.dat]]
o.takeDistance = 1.8
o.Scale = 0.07
o.DisabledInVoosh = true
o.AmmoAdd = 10
o.MPAmmoAdd = 2
o.RespawnTime = 15
o.s_SubClass ={}

--============================================================================
function o:OnInitTemplate()
    self.CubeMap = nil
    self.DetailMap = nil
    self.NormalMap = nil
    self.Destroy = nil
    self.Impulse = nil
    self:ReplaceFunction("_Synchronize","Synchronize")
    self:ReplaceFunction("Synchronize","nil")
end
--============================================================================
function AmmoStickyBombs:OnCreateEntity()
    ENTITY.EnableNetworkSynchronization(self._Entity)
end
--============================================================================
function AmmoStickyBombs:OnTake(player)
    if player.Ammo.StickyBombs >= CPlayer.s_SubClass.MaxAmmo.StickyBombs then return true end
local add
if Game.GMode == GModes.SingleGame then add=self.AmmoAdd else add = self.MPAmmoAdd end
    self.TakeFX(player._Entity, add)
	Game.PlayerAmmoFound =  Game.PlayerAmmoFound + 1
end
--============================================================================
function AmmoStickyBombs:TakeFX(pe,add)
    local player = EntityToObject[pe]
    
    if player then
	if Game.GMode == GModes.SingleGame then
	        player.Ammo.StickyBombs = player.Ammo.StickyBombs + add * AmmoDifficultyModifier[Game.Difficulty] * Game.AmmoFoundFactor
	else
	        player.Ammo.StickyBombs = player.Ammo.StickyBombs + add
	end

        player:CheckMaxAmmo()
        if player == Player then player:PickupFX() end
    end

    Templates["AmmoStickyBombs.CItem"]:SndEnt("pickup",pe)
end
Network:RegisterMethod("AmmoStickyBombs.TakeFX", NCallOn.ServerAndAllClients, NMode.Reliable, "eu")
--============================================================================
