o.Mesh = "cogwheels_atest_Shape"
o.Pack = "ammo_Cogwheels.dat"
o.takeDistance = 1.8
o.Scale = 0.3
o.DisabledInVoosh = true
o.RespawnTime = 15
o.AmmoAdd = 30

--============================================================================
function AmmoCogWheels:OnInitTemplate()
    self.CubeMap = nil
    self.DetailMap = nil
    self.NormalMap = nil
    self.Destroy = nil
    self.Impulse = nil
    self:ReplaceFunction("_Synchronize","Synchronize")
    self:ReplaceFunction("Synchronize","nil")
end
--============================================================================
function AmmoCogWheels:OnCreateEntity()
    ENTITY.EnableNetworkSynchronization(self._Entity)
end
--============================================================================
function AmmoCogWheels:OnTake(player)    
    if player.Ammo.CogWheels >= CPlayer.s_SubClass.MaxAmmo.CogWheels then return true end
    self.TakeFX(player._Entity, self.AmmoAdd)
	Game.PlayerAmmoFound =  Game.PlayerAmmoFound + 1
end
--============================================================================
function AmmoCogWheels:TakeFX(pe,add)
    local player = EntityToObject[pe]    
    if player then
        player.Ammo.CogWheels = player.Ammo.CogWheels + add * AmmoDifficultyModifier[Game.Difficulty] * Game.AmmoFoundFactor
        player:CheckMaxAmmo()
        if player == Player then player:PickupFX() end
    end
    Templates["AmmoCogWheels.CItem"]:SndEnt("pickup",pe)
end
Network:RegisterMethod("AmmoCogWheels.TakeFX", NCallOn.ServerAndAllClients, NMode.Reliable, "eu")
--============================================================================
