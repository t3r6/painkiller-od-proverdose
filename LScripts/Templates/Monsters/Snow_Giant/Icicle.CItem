Icicle.Mesh = "pConeShape1"
Icicle.Pack = "P_Icicle.dat"

Icicle.Scale = 0.7
Icicle.Pos = Vector:New(0,0,-4)
Icicle.Restitution = 0.2
Icicle.Damage = 34
Icicle.ThrowSpeed = 50
Icicle.LifeTime = 180				-- after 1st col
Icicle.TimeToLive = 30 * 60
Icicle.CollisionSound = {"impacts/stonebig-impact1","impacts/stonebig-impact2","impacts/stonebig-impact3","impacts/stonebig-impact4","impacts/stonebig-impact5"}

--============================================================================
function Icicle:OnCollision(x,y,z,nx,ny,nz,e)
	local ecol = true
	if e then
		local obj = EntityToObject[e]
		if obj and obj._Class ~= "CItem" then
			if obj ~= self.ObjOwner then
				if obj.OnDamage then
					local v = Vector:New(ENTITY.GetVelocity(self._Entity))
					local x,y,z,mag = ENTITY.GetVelocity(self._Entity)
						PlaySound3D("actor/giant/giant_hand-hit",obj.Pos.X,obj.Pos.Y,obj.Pos.Z,3,5)
						obj:OnDamage(self.Damage, self)
						self.Damage = 3
					ecol = false
				end
				--GObjects:ToKill(self)
			else
				Game:Print("coL WITH Sekfl")
			end
		else
            if not SOUND3D.IsPlaying(self._snd) then
                self._snd = PlaySound3D("impacts/stonebig-impact"..math.random(1,3),x,y,z, 10, 60)
            end
		end
	end
	if not self.timer then
        ENTITY.PO_EnableGravity(self._Entity,true)
		self.timer = math.random(self.LifeTime*0.8,self.LifeTime*1.2)
	end
end
--============================================================================
function Icicle:OnCreateEntity()
	self:PO_Create(BodyTypes.FromMesh,nil,ECollisionGroups.Noncolliding)
	self:BindFX('Snow_Giant_Icicle_Flame',1)
    ENTITY.PO_EnableGravity(self._Entity,false)
    self.timerInit = 8
end
--============================================================================
function Icicle:OnUpdate()
	if self.timerInit then
		self.timerInit = self.timerInit - 1
		if self.timerInit < 0 then
			ENTITY.PO_SetCollisionGroup(self._Entity, ECollisionGroups.Normal)
   			ENTITY.EnableCollisions(self._Entity, true, 0.8, 4.0)
   			self.timerInit = nil
   		end
   	else
		if self.timer then
			self.timer = self.timer - 1
			if self.timer < 0 then
				GObjects:ToKill(self)
				AddPFX("Snow_Giant_Walk",0.5,Vector:New(self.Pos.X,self.Pos.Y,self.Pos.Z))
			end
		end
	end
	if not self._set then
		if self.PosDest then
			local dx = self.PosDest.X - self.Pos.X
			local dy = self.PosDest.Y - self.Pos.Y
			local dz = self.PosDest.Z - self.Pos.Z
			local v = Vector:New(dx, dy, dz)
			v:Normalize()

            --local speed = self.RotateSpeed * FRand(0.8, 1.2)
            --local a = ENTITY.GetOrientation(self.ObjOwner._Entity)
            --local a = self._RotAngle
            --local vx = math.cos(a)
            --local vz = -math.sin(a)

			--ENTITY.SetAngularVelocity(self._Entity, vx*speed, 0, vz*speed)
			local force = self.ThrowSpeed * FRand(0.8, 1.3)

			self._velx = v.X*force
			self._vely = v.Y*force
			self._velz = v.Z*force
			
			ENTITY.SetVelocity(self._Entity, self._velx, self._vely, self._velz)
		end
		self._set = true
	end
end
